DROP TABLE FOTOS; --entidades con relaciones, foreign key, crear en este orden
DROP TABLE ASOC_P_P;
DROP TABLE PEDIDOS;
DROP TABLE EJEMPLARES;
DROP TABLE TELEFONOS;
DROP TABLE FACTURAS;

DROP TABLE DEVOLUCIONES;
DROP TABLE ASOC_V_P;
DROP TABLE DATOS_PAGO_VENTA;
DROP TABLE NOMINAS;
DROP TABLE GASTOS;
DROP TABLE EMPLEADOS;
DROP TABLE VENTAS;
DROP TABLE CLIENTES;

DROP TABLE PROVEEDORES; --entidades sin foreign key
DROP TABLE USUARIOS;
DROP TABLE PRODUCTOS;
DROP TABLE LOCALIZACIONES;
DROP TABLE PROVINCIAS;


---------------TODOS LOS CREATE TABLE---------------------------------------------------------
CREATE TABLE PROVINCIAS(
OID_P NUMBER PRIMARY KEY,
NOMBRE VARCHAR(64)
);

CREATE TABLE PROVEEDORES (                  --Tablas sin foreign key
    OID_PROVEEDOR NUMBER(4) PRIMARY KEY,
    nombre VARCHAR2(64) NOT NULL,
    nif CHAR(9) NOT NULL,
    email VARCHAR2(64) UNIQUE,
    cuentaBancaria VARCHAR2(24)
);

CREATE TABLE USUARIOS ( --Aquí se implementa la RN-01-01 con los not null y la RN-01-03 con el unique en el correo y el between en la contrasenya
    OID_USUARIO NUMBER PRIMARY KEY, 
    email VARCHAR2(64) NOT NULL UNIQUE, 
    contrasenya VARCHAR2(32) NOT NULL CHECK (LENGTH(contrasenya) BETWEEN 8 and 24),
    nombre VARCHAR2(32) NOT NULL,
    apellidos VARCHAR2(64) NOT NULL,
    fechaNacimiento DATE DEFAULT (SYSDATE),
    activo CHAR(1) NOT NULL CHECK (activo IN ('S','N')) --SI NO FUNCIONA, SUSTITUIR POR S/N
);

CREATE TABLE LOCALIZACIONES (
    OID_L NUMBER(4) PRIMARY KEY,
    nombre VARCHAR(64) NOT NULL,
    ciudad VARCHAR2(64) NOT NULL,
    direccion VARCHAR2(64) NOT NULL,
    codigoPostal CHAR(5) NOT NULL
);

CREATE TABLE PRODUCTOS ( --Aquí se implementa la RN-02-01
    OID_PRODUCTO NUMBER PRIMARY KEY,
    nombre VARCHAR2(64) NOT NULL,
    precioBase NUMBER(7,2) NOT NULL,
    iva NUMBER(3,2) DEFAULT (0.21),
    marca VARCHAR2(32),
    categoria VARCHAR(32) CHECK (categoria IN ('COMPONENTES Y ORDENADORES','SMARTPHONES','VIDEO Y AUDIO',
           'GAMING','ELECTRONICA','ELECTRODOMESTICOS Y HOGAR','CUIDADO PERSONAL','OTROS')),
    stockMinimo NUMBER(8) DEFAULT (0) NOT NULL,
    descripcion VARCHAR2(265) DEFAULT (''),
    inventariable CHAR(1) NOT NULL CHECK (inventariable IN ('S','N')),
    stock NUMBER DEFAULT 0 NOT NULL CHECK(stock>=0)
);



 --Tablas con referencias, cuidado con el orden
CREATE TABLE FOTOS (               
    OID_FOTO NUMBER(4) PRIMARY KEY,
    urlFoto VARCHAR2(128),
    OID_PRODUCTO NUMBER,
    FOREIGN KEY (OID_PRODUCTO) REFERENCES PRODUCTOS ON DELETE CASCADE
);

CREATE TABLE PEDIDOS(
    OID_PED NUMBER(4) PRIMARY KEY,
    OID_PROVEEDOR NUMBER(4),
    FOREIGN KEY (OID_PROVEEDOR) REFERENCES PROVEEDORES,
    fechaPedido DATE DEFAULT (SYSDATE),
    fechaEnvio DATE DEFAULT (SYSDATE),
    direccionEnvio VARCHAR(64),
    fechaEntrega DATE  
);

CREATE TABLE ASOC_P_P(
    OID_P_P NUMBER(4) PRIMARY KEY ,
    OID_PRODUCTO NUMBER,
    FOREIGN KEY (OID_PRODUCTO) REFERENCES PRODUCTOS,
    OID_PED NUMBER,
    FOREIGN KEY (OID_PED) REFERENCES PEDIDOS,
    cantidad NUMBER(4) DEFAULT 1 NOT NULL , 
    precioCompra NUMBER (8,2) NOT NULL
);

CREATE TABLE EJEMPLARES(
    OID_EJ NUMBER(4) PRIMARY KEY,
    OID_PRODUCTO NUMBER,
    FOREIGN KEY (OID_PRODUCTO) REFERENCES PRODUCTOS,
    serialNumber CHAR(64) NOT NULL
);

CREATE TABLE CLIENTES(--Aqui se implementa otra parte de la RN-01-01 con el not null del nick
    OID_CLIENTE NUMBER(4) PRIMARY KEY,
    OID_USUARIO NUMBER(4),
    FOREIGN KEY (OID_USUARIO) REFERENCES USUARIOS ON DELETE CASCADE,
    tarjetaCredito NUMBER(16),
    nick VARCHAR2(32) NOT NULL, 
    fechaCaducidadTarjeta DATE
);

CREATE TABLE TELEFONOS(
    OID_T NUMBER(4) PRIMARY KEY,
    OID_PROVEEDOR NUMBER(4),
    OID_CLIENTE NUMBER(4),
    FOREIGN KEY (OID_PROVEEDOR) REFERENCES PROVEEDORES,
    FOREIGN KEY (OID_CLIENTE)  REFERENCES CLIENTES ON DELETE CASCADE,
    prefijo NUMBER(4) DEFAULT NULL,
    numero NUMBER(16) NOT NULL
);

CREATE TABLE VENTAS( --AQUÍ SE IMPLEMENTA LA RN-03-03
    OID_V NUMBER(4) PRIMARY KEY,
    OID_CLIENTE NUMBER(4),
    FOREIGN KEY (OID_CLIENTE) REFERENCES CLIENTES ON DELETE SET NULL,
    importe NUMBER(8,2) NOT NULL CHECK (importe>0),
    ventaOnline CHAR(1) NOT NULL CHECK (ventaOnline IN ('S','N')),
    tipoEnvio VARCHAR(16) NOT NULL CHECK (tipoEnvio IN ('24HORAS','ESTANDAR','EXPRES','ECONOMICO')),
    fechaEnvio DATE DEFAULT SYSDATE,
    fechaVenta DATE DEFAULT SYSDATE,
    direccionEnvio VARCHAR(64),
    poblacion VARCHAR(32) CHECK (poblacion IN ('A Coruña','Álava','Albacete','Alicante','Almería','Asturias','Ávila','Badajoz','Islas Baleares','Barcelona','Burgos','Cáceres','Cádiz','Cantabria','Castellón','Ciudad Real','Córdoba','Cuenca','Girona','Granada','Guadalajara','Guipúzcoa','Huelva','Huesca','Jaén','La Rioja','Las Palmas','León','Lleida','Lugo','Madrid','Málaga','Murcia','Navarra','Orense','Palencia','Pontevedra','Salamanca','Segovia','Sevilla','Soria','Tarragona','Santa Cruz de Tenerife','Teruel','Toledo','Valencia','Valladolid','Vizcaya','Zamora','Zaragoza')),
    codigoPostal NUMBER(5) CHECK (codigoPostal>01000 AND codigoPostal<52999),
    fechaEntrega DATE
);
CREATE TABLE DATOS_PAGO_VENTA(
    OID_DATOS_PAGO NUMBER(4) PRIMARY KEY,
    OID_V NUMBER(4),
    FOREIGN KEY (OID_V) REFERENCES VENTAS ON DELETE CASCADE,
     tarjetaCredito NUMBER(16) NOT NULL,
    nombre VARCHAR2(64) NOT NULL,
    cvv NUMBER(5) NOT NULL,
 fechaCaducidad DATE DEFAULT (SYSDATE) NOT NULL



);

CREATE TABLE ASOC_V_P(
    OID_V_P NUMBER(4) PRIMARY KEY,
    OID_V NUMBER(4),
    OID_PRODUCTO NUMBER,
    FOREIGN KEY (OID_V) REFERENCES VENTAS ON DELETE CASCADE,
    FOREIGN KEY (OID_PRODUCTO) REFERENCES PRODUCTOS,
    cantidad NUMBER(4) NOT NULL CHECK (cantidad > 0),
    precioVenta NUMBER(8,2) NOT NULL CHECK (precioVenta > 0)
);

CREATE TABLE DEVOLUCIONES(
    OID_D NUMBER(4) PRIMARY KEY,
    OID_V_P NUMBER(4),
    FOREIGN KEY (OID_V_P) REFERENCES ASOC_V_P,
    cantidad NUMBER(4),
    fechaDevolucion DATE,
    motivo VARCHAR(32) NOT NULL CHECK (motivo IN ('DEFECTO DE FABRICA','COMPRA EQUIVOCADA','DAÑOS DE ENVIO','GARANTIA')), 
    descripcion VARCHAR2(512)
);

CREATE TABLE FACTURAS(
    OID_FAC NUMBER(4) PRIMARY KEY,
    OID_V NUMBER(4),
    FOREIGN KEY (OID_V) REFERENCES VENTAS,
    urlFactura VARCHAR2(128) 
);

CREATE TABLE EMPLEADOS(
    OID_EMPLEADO NUMBER(5) PRIMARY KEY,
    OID_USUARIO NUMBER(4),
    OID_L NUMBER(4),
    FOREIGN KEY (OID_EMPLEADO) REFERENCES EMPLEADOS ON DELETE SET NULL,
    FOREIGN KEY (OID_USUARIO) REFERENCES USUARIOS ON DELETE SET NULL,
    FOREIGN KEY (OID_L) REFERENCES LOCALIZACIONES ON DELETE SET NULL,
    dni CHAR(9) NOT NULL,
    ss CHAR(16) NOT NULL,
    cuentaBancaria NUMBER(32),
    rol VARCHAR2(32) NOT NULL CHECK (rol IN ('GESTOR DE PERSONAL','RESPONSABLE DE ALMACEN','RESPONSABLE DE TIENDA'))
);

CREATE TABLE NOMINAS(
    OID_N NUMBER(4) PRIMARY KEY,
    OID_EMPLEADO NUMBER(5),
    FOREIGN KEY (OID_EMPLEADO)  REFERENCES EMPLEADOS ON DELETE CASCADE,
    fechaInicio DATE DEFAULT (SYSDATE),
    fechaFin DATE,
    salarioBase NUMBER(8,2) DEFAULT(900.0) CHECK (salarioBase > 0),
    complementoSalarial NUMBER(8,2) DEFAULT(0.0)
);

CREATE TABLE GASTOS( --Aquí se implementa la RN-04-01 y la RN-04-02
    OID_G NUMBER(4) PRIMARY KEY,
    OID_EMPLEADO NUMBER(5),
    FOREIGN KEY (OID_EMPLEADO)  REFERENCES EMPLEADOS, 
    descripcion VARCHAR(64) DEFAULT (''),
    importe NUMBER(8,2) NOT NULL CHECK(importe<=2000),
    fechaGasto DATE DEFAULT (SYSDATE)
);


